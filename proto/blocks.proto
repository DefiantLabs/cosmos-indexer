syntax = "proto3";

option go_package = "/blocks";

package blocks;

import "google/protobuf/timestamp.proto";

service BlocksService {
  rpc BlockInfo(GetBlockInfoRequest) returns (GetBlockInfoResponse) {}
  rpc BlockValidators(GetBlockValidatorsRequest) returns (GetBlockValidatorsResponse) {}
  rpc TxChartByDay(TxChartByDayRequest) returns (TxChartByDayResponse) {}
  rpc TxByHash(TxByHashRequest) returns (TxByHashResponse) {}
}

message Block {
  int64 block_height = 1;
  string proposed_validator = 2;
  google.protobuf.Timestamp generation_time = 3;
  string total_fees = 5;
  string tx_hash=6;
}

message GetBlockInfoRequest {
  int32 block_number = 1;
  int32 chain_id = 2;
}

message GetBlockInfoResponse {
  int32 block_number = 1;
  int32 chain_id = 2;
  Block info = 3;
}

message GetBlockValidatorsRequest {
  int32 block_number = 1;
  int32 chain_id = 2;
}

message GetBlockValidatorsResponse {
  int32 block_number = 1;
  int32 chain_id = 2;
  repeated string validators_list = 3;
}

message TxByDay{
  int32 tx_num = 1;
  google.protobuf.Timestamp day = 2;
}

message TxChartByDayRequest {
  google.protobuf.Timestamp from = 1;
  google.protobuf.Timestamp to = 2;
}

message TxChartByDayResponse {
  repeated TxByDay tx_by_day = 1;
}

message TxByHashRequest {
  string hash = 1;
}

message TxByHashResponse {
  TxByHash tx = 1;
}

message TxByHash {
  repeated string messages = 1;
  string memo = 2;
  string timeout_height = 3;
  repeated string extension_options = 4;
  repeated string non_critical_extension_options = 5;
  TxAuthInfo auth_info = 6;
  TxResponse tx_response = 7;
}

message TxAuthInfo {
  repeated string public_key = 1;
  TxFee fee = 2;
  repeated string signatures = 3;
  TxTip tip = 4;
}

message TxFee {
  repeated Denom amount = 1;
  string gas_limit = 2;
  string payer = 3;
  string granter = 4;
}

message TxTip {
  repeated Denom amount = 1;
  string tipper = 2;
}

message TxResponse {
  string height = 1;
  string txhash = 2;
  string codespace = 3;
  int32 code = 4;
  string data = 5;
  string raw_log = 6;
  repeated TxLog logs = 7;
  string info = 8;
  string gas_wanted = 9;
  string gas_used = 10;
  string timestamp = 11;
}

message TxLog {
  int32 msg_index = 1;
  string log = 2;
}

message Denom {
  string denom = 1;
  string amount = 2;
}